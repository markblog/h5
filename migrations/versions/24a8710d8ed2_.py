"""empty message

Revision ID: 24a8710d8ed2
Revises: 084dbae768a3
Create Date: 2018-01-16 16:52:55.655752

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '24a8710d8ed2'
down_revision = '084dbae768a3'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('currency',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=63), nullable=True),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('metric',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=63), nullable=True),
    sa.Column('period', sa.String(length=15), nullable=True),
    sa.Column('data_source', sa.String(length=15), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('region',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=63), nullable=True),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sector',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=63), nullable=True),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('entity',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('name_in_performance', sa.String(length=63), nullable=True),
    sa.Column('name_in_risk', sa.String(length=63), nullable=True),
    sa.Column('name_in_accounting', sa.String(length=63), nullable=True),
    sa.Column('sector_id', sa.Integer(), nullable=True),
    sa.Column('currency_id', sa.Integer(), nullable=True),
    sa.Column('region_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['currency_id'], ['currency.id'], ),
    sa.ForeignKeyConstraint(['region_id'], ['region.id'], ),
    sa.ForeignKeyConstraint(['sector_id'], ['sector.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('entity_set',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('date_key', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['group.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('structure',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('level_name', sa.String(length=64), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('benchmark_id', sa.Integer(), nullable=True),
    sa.Column('entity_id', sa.Integer(), nullable=True),
    sa.Column('set_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['entity_id'], ['entity.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('structure_metric_value',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('structure_id', sa.Integer(), nullable=True),
    sa.Column('metric_id', sa.Integer(), nullable=True),
    sa.Column('value', sa.Float(), nullable=True),
    sa.Column('date_key', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['metric_id'], ['metric.id'], ),
    sa.ForeignKeyConstraint(['structure_id'], ['structure.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('structure_metric_value')
    op.drop_table('structure')
    op.drop_table('entity_set')
    op.drop_table('entity')
    op.drop_table('sector')
    op.drop_table('region')
    op.drop_table('metric')
    op.drop_table('currency')
    # ### end Alembic commands ###
